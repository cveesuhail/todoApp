{"version":3,"sources":["App.js","index.js"],"names":["App","useState","toDos","addTodos","text","setText","useEffect","notes","JSON","parse","localStorage","getItem","length","setItem","stringify","className","align","today","type","placeholder","onInput","e","target","value","onClick","done","removed","id","Date","now","map","el","name","onChange","o","style","marginBottom","fontSize","color","getTime","checked","filter","a","weekdays","Array","getDay","time","d","hr","getHours","min","getMinutes","ampm","getDate","getMonth","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d580901b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [toDos, addTodos] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    let notes = JSON.parse(localStorage.getItem(\"todos\"));\n    if (notes && notes.length > 0) {\n      addTodos(notes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(toDos));\n  }, [toDos]);\n\n  return (\n    <div className=\"app container-fluid\">\n      <div className=\"hadd\">\n        <div className=\"col-12 d-flex justify-content-center\">\n          <div className=\"text-center pb-3\">\n            <div className=\"subHeading\">\n              <br />\n              <div className=\"mainHeading mt-3\">\n                <h1 align=\"center \">ToDo List</h1>\n                <h4>Whoop, it's {today()}</h4>\n\n                <div className=\"input py-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"🖊️ Add item...\"\n                    onInput={(e) => setText(e.target.value)}\n                    value={text}\n                  />\n                  <i\n                    className=\"fas fa-plus\"\n                    onClick={() => {\n                      if (text.length > 0) {\n                        addTodos([\n                          ...toDos,\n                          {\n                            value: text,\n                            done: false,\n                            removed: false,\n                            id: Date.now(),\n                            \n                          },\n                        ]);\n                        setText(\"\");\n                      }\n                    }}\n                  ></i>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <br />\n\n      <div className=\"list\">\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-4 mb-3\">\n              <h3 align=\"center \">Active Todos</h3>\n              <div className=\"row\">\n                {toDos.map((el) => {\n                  if (!el.done && !el.removed) {\n                    return (\n                      <div className=\"todos\" key={el.id}>\n                        <div className=\"active\">\n                          <div className=\"col-11\">\n                            <label className=\"small\">Mark as Done:&nbsp;</label>\n                            <input\n                              type=\"checkbox\"\n                              name={el.id}\n                              id=\"\"\n                              value={el.done}\n                              onChange={() => {\n                                addTodos(\n                                  toDos.map((o) => {\n                                    if (o.id === el.id) {\n                                      o.done = !o.done;\n                                    }\n                                    return o;\n                                  })\n                                );\n                              }}\n                            />\n                            <p\n                              className=\"todo-content h4 my-2\"\n                              style={{ marginBottom: \"0px\" }}\n                            >\n                              {el.value}\n                            </p>\n                            <p\n                              style={{\n                                marginBottom: \"\",\n                                fontSize: \"0.7em\",\n                                color: \"white\",\n                              }}\n                            >\n                              {getTime(el.id)}\n                            </p>\n                          </div>\n                          <div className=\"trash\">\n                            <i\n                              className=\"fas fa-trash-alt\"\n                              onClick={() => {\n                                addTodos(\n                                  toDos.map((o) => {\n                                    if (o.id === el.id) {\n                                      o.removed = !o.removed;\n                                    }\n                                    return o;\n                                  })\n                                );\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-3\">\n              <h3 align=\"center \">Todos finished</h3>\n              <div className=\"row\">\n                {toDos.map((el) => {\n                  if (el.done && !el.removed) {\n                    return (\n                      <div className=\"todos\" key={el.id}>\n                        <div className=\"active\">\n                          <div className=\"col-11\">\n                            <label>Marked as done: &nbsp;</label>\n                            <input\n                              type=\"checkbox\"\n                              name=\"{el.id}\"\n                              id=\"{el.id}\"\n                              checked={el.done}\n                              onChange={() => {\n                                addTodos(\n                                  toDos.map((o) => {\n                                    if (o.id === el.id) {\n                                      o.done = !o.done;\n                                    }\n                                    return o;\n                                  })\n                                );\n                              }}\n                            />\n                            <p\n                              className=\"todo-content h4 my-2\"\n                              style={{ marginBottom: \"0px\" }}\n                            >\n                              {el.value}\n                            </p>\n                            <p\n                              style={{\n                                marginBottom: \"\",\n                                fontSize: \"0.7em\",\n                                color: \"white\",\n                              }}\n                            >\n                              {getTime(el.id)}\n                            </p>\n                          </div>\n                          <div className=\"col-1\">\n                            <i\n                              className=\"fas fa-times text-dark\"\n                              onClick={() => {\n                                addTodos(\n                                  toDos.filter((o) => {\n                                    if (o.id === el.id) {\n                                      return false;\n                                    }\n                                    return true;\n                                  })\n                                );\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            </div>\n            <div className=\"col-md-4 mb-3\">\n              <h3 align=\"center\"> Todos cancelled</h3>\n              <div className=\"row\">\n                {toDos.map((el) => {\n                  if (el.removed) {\n                    return (\n                      <div className=\"todos\" key={el.id}>\n                        <div className=\"active\">\n                          <div className=\"col-11\">\n                            <label>Restore Todo: &nbsp;</label>\n                            <input\n                              type=\"checkbox\"\n                              name=\"{el.id}\"\n                              id=\"{el.id}\"\n                              value={el.done}\n                              onChange={() => {\n                                addTodos(\n                                  toDos.map((o) => {\n                                    if (o.id === el.id) {\n                                      o.removed = !o.removed;\n                                    }\n                                    return o;\n                                  })\n                                );\n                              }}\n                            />\n                            <p\n                              className=\"todo-content h4 my-2\"\n                              style={{ marginBottom: \"0px\" }}\n                            >\n                              {el.value}\n                            </p>\n                            <p\n                              style={{\n                                marginBottom: \"\",\n                                fontSize: \"0.7em\",\n                                color: \"black\",\n                              }}\n                            >\n                              {getTime(el.id)}\n                            </p>\n                          </div>\n                          <div className=\"col-1\">\n                            <i\n                              className=\"fas fa-times text-dark\"\n                              onClick={() => {\n                                addTodos(\n                                  toDos.filter((o) => {\n                                    if (o.id === el.id) {\n                                      return false;\n                                    }\n                                    return true;\n                                  })\n                                );\n                              }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  } else {\n                    return null;\n                  }\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction today() {\n  var a = new Date();\n  var weekdays = new Array(7);\n  weekdays[0] = \"Sunday\";\n  weekdays[1] = \"Monday\";\n  weekdays[2] = \"Tuesday\";\n  weekdays[3] = \"Wednesday\";\n  weekdays[4] = \"Thursday\";\n  weekdays[5] = \"Friday\";\n  weekdays[6] = \"Saturday\";\n  var r = weekdays[a.getDay()];\n  return r;\n}\n\n\n\nfunction getTime(time) {\n  var months = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n  // var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var d = new Date(time);\n  // var day = days[d.getDay()];\n  var hr = d.getHours();\n  var min = d.getMinutes();\n  if (min < 10) {\n    min = \"0\" + min;\n  }\n  var ampm = \"am\";\n  if (hr > 12) {\n    hr -= 12;\n    ampm = \"pm\";\n  }\n  var date = d.getDate();\n  var month = months[d.getMonth()];\n  var year = d.getFullYear();\n  return hr + \":\" + min + ampm + \" \" + date + \" \" + month + \" \" + year;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}